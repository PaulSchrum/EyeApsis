//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EyeApsisApp.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EyeApsisApp.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accept Calibration and Begin Testing.
        /// </summary>
        public static string Calibrate_AcceptProceed {
            get {
                return ResourceManager.GetString("Calibrate_AcceptProceed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usually this only has to be done at first use or when switching to a different screen for the vision chart..
        /// </summary>
        public static string Calibrate_footerExplanation {
            get {
                return ResourceManager.GetString("Calibrate_footerExplanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the Screen Adjustment Factor until the thick vertical line is exactly 3 inches tall..
        /// </summary>
        public static string Calibrate_Instructions_Imperial {
            get {
                return ResourceManager.GetString("Calibrate_Instructions_Imperial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the Screen Adjustment Factor until the thick vertical line is exactly 8 centimeters tall..
        /// </summary>
        public static string Calibrate_Instructions_Metric {
            get {
                return ResourceManager.GetString("Calibrate_Instructions_Metric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the mouse wheel to change Adjustment Factor values more easily..
        /// </summary>
        public static string Calibrate_popUseMouseWheel {
            get {
                return ResourceManager.GetString("Calibrate_popUseMouseWheel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Screen Adjustment Factor:.
        /// </summary>
        public static string Calibrate_ScreenAdjustmentFactor {
            get {
                return ResourceManager.GetString("Calibrate_ScreenAdjustmentFactor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calibrate: Tell EyeApsis How to Measure the Screen.
        /// </summary>
        public static string Calibrate_WindowTitle {
            get {
                return ResourceManager.GetString("Calibrate_WindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Color
        ///Sensitivity.
        /// </summary>
        public static string Dash_ColorSensitivity {
            get {
                return ResourceManager.GetString("Dash_ColorSensitivity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contrast
        ///Sensitivity.
        /// </summary>
        public static string Dash_ContrastSensitivity {
            get {
                return ResourceManager.GetString("Dash_ContrastSensitivity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Visual
        ///Acuity .
        /// </summary>
        public static string Dash_VisualAcuity {
            get {
                return ResourceManager.GetString("Dash_VisualAcuity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit EyeAspsis.
        /// </summary>
        public static string ExitEyeApsis {
            get {
                return ResourceManager.GetString("ExitEyeApsis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EyeApsis.
        /// </summary>
        public static string EyeApsis {
            get {
                return ResourceManager.GetString("EyeApsis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset to 1.0.
        /// </summary>
        public static string Reset_to_1 {
            get {
                return ResourceManager.GetString("Reset_to_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EyeApsis is intended only to test vision for the purposes of making prediagnostic assessments of a subject&apos;s vision.  Eyeapsis is not certified for actual diagnosis of vision problems or diseases of the eye and should not be used for these purposes.  By clicking the the Agree and Proceed button below, you agree to these terms and you release Terragrammetry, Inc. from any and all liability associated with the use of EyeApsis.  Vision tests made with EyeApsis which indicate possible vision problems should be  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Splash_Disclaimer {
            get {
                return ResourceManager.GetString("Splash_Disclaimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit Without Agreeing.
        /// </summary>
        public static string Splash_ExitWithoutAgreeing {
            get {
                return ResourceManager.GetString("Splash_ExitWithoutAgreeing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I agree to these terms. Proceed..
        /// </summary>
        public static string Splash_IAgreeProceed {
            get {
                return ResourceManager.GetString("Splash_IAgreeProceed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prediagnostic Vision Assessment Software.
        /// </summary>
        public static string Splash_Subtitle {
            get {
                return ResourceManager.GetString("Splash_Subtitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch to Centimeters.
        /// </summary>
        public static string Switch_to_Centimeters {
            get {
                return ResourceManager.GetString("Switch_to_Centimeters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch to Inches.
        /// </summary>
        public static string Switch_to_Inches {
            get {
                return ResourceManager.GetString("Switch_to_Inches", resourceCulture);
            }
        }
    }
}
